{"ast":null,"code":"import _defineProperty from \"/home/rajesh/streamy/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _ from 'lodash';\nimport { FETCH_STREAMS, FETCH_STREAM, EDIT_STREAM, DELETE_STREAM, CREATE_STREAM } from '../actions/types';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return _objectSpread({}, state, {}, _.mapKeys(action.payload, 'id'));\n\n    case FETCH_STREAM:\n      return _objectSpread({}, state, {\n        [action.payload.id]: action.payload\n      });\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    case CREATE_STREAM:\n      return _objectSpread({}, state, {\n        [action.payload.id]: action.payload\n      });\n\n    case EDIT_STREAM:\n      return _objectSpread({}, state, {\n        [action.payload.id]: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/rajesh/streamy/src/reducers/streamReducer.js"],"names":["_","FETCH_STREAMS","FETCH_STREAM","EDIT_STREAM","DELETE_STREAM","CREATE_STREAM","state","action","type","mapKeys","payload","id","omit"],"mappings":";;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,aALF,QAMO,kBANP;AAQA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AAErC,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKP,aAAL;AACE,+BAAYK,KAAZ,MAAsBN,CAAC,CAACS,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAA0B,IAA1B,CAAtB;;AAEF,SAAKR,YAAL;AACE,+BAAYI,KAAZ;AAAmB,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAA/C;;AAEF,SAAKN,aAAL;AACE,aAAOJ,CAAC,CAACY,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACG,OAArB,CAAP;;AAEF,SAAKL,aAAL;AACE,+BAAYC,KAAZ;AAAmB,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAA/C;;AAEF,SAAKP,WAAL;AACE,+BAAYG,KAAZ;AAAmB,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAA/C;;AAEF;AACE,aAAOJ,KAAP;AAlBJ;AAqBD,CAvBD","sourcesContent":["import _ from 'lodash';\nimport {\n  FETCH_STREAMS,\n  FETCH_STREAM,\n  EDIT_STREAM,\n  DELETE_STREAM,\n  CREATE_STREAM\n} from '../actions/types';\n\nexport default (state = {}, action) => {\n\n  switch (action.type) {\n\n    case FETCH_STREAMS:\n      return { ...state, ..._.mapKeys(action.payload, 'id') };\n\n    case FETCH_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    case CREATE_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n\n    case EDIT_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n\n    default:\n      return state;\n  }\n\n};"]},"metadata":{},"sourceType":"module"}