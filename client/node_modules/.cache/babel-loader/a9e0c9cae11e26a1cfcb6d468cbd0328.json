{"ast":null,"code":"import _defineProperty from \"/home/rajesh/streamy/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport streams from '../api/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, EDIT_STREAM, DELETE_STREAM, FETCH_STREAM } from './types';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  const response = await streams.post('/streams', _objectSpread({}, formValues, {\n    userId\n  }));\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(\"/streams/\".concat(id));\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(\"/streams/\".concat(id), formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  streams.delete(\"/streams/\".concat(id));\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/home/rajesh/streamy/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","EDIT_STREAM","DELETE_STREAM","FETCH_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,WAA1D,EAAuEC,aAAvE,EAAsFC,YAAtF,QAA0G,SAA1G;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAET,OADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAAA,QAC9DP,MAD8D,GACnDO,QAAQ,GAAGC,IADwC,CAC9DR,MAD8D;AAEtE,QAAMS,QAAQ,GAAG,MAAMlB,OAAO,CAACmB,IAAR,CAAa,UAAb,oBAA8BL,UAA9B;AAA0CL,IAAAA;AAA1C,KAAvB;AACAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMN,QAAN,IAAkB;AAClD,QAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,GAAR,CAAY,UAAZ,CAAvB;AACAP,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEN,aAAR;AAAuBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAMT,QAAN,IAAkB;AACnD,QAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,GAAR,oBAAwBE,EAAxB,EAAvB;AACAT,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEH,YAAR;AAAsBI,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKV,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC9D,QAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAAC0B,GAAR,oBAAwBF,EAAxB,GAA8BV,UAA9B,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEL,WAAR;AAAqBM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMT,QAAN,IAAkB;AACpDf,EAAAA,OAAO,CAAC4B,MAAR,oBAA2BJ,EAA3B;AACAT,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEa;AAAhC,GAAD,CAAR;AAED,CAJM","sourcesContent":["import streams from '../api/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, EDIT_STREAM, DELETE_STREAM, FETCH_STREAM } from './types';\n\nexport const signIn = (userId) => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\n\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT,\n  };\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n  const { userId } = getState().auth;\n  const response = await streams.post('/streams', { ...formValues, userId });\n  dispatch({ type: CREATE_STREAM, payload: response.data });\n};\n\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams')\n  dispatch({ type: FETCH_STREAMS, payload: response.data });\n};\n\nexport const fetchStream = (id) => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({ type: FETCH_STREAM, payload: response.data });\n};\n\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({ type: EDIT_STREAM, payload: response.data });\n}\n\nexport const deleteStream = (id) => async dispatch => {\n  streams.delete(`/streams/${id}`);\n  dispatch({ type: DELETE_STREAM, payload: id });\n\n};\n\n"]},"metadata":{},"sourceType":"module"}