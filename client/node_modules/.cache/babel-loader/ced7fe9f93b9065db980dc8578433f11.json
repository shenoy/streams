{"ast":null,"code":"var _jsxFileName = \"/home/rajesh/streamy/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream, deleteStream } from '../../actions';\nimport { connect } from 'react-redux';\nimport streams from '../../api/streams';\nimport { Link } from 'react';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream?';\n    }\n\n    return \"Are you sure you want to delete the stream with title : \".concat(this.props.stream.title, \" ?\");\n  }\n\n  renderActions() {\n    return React.createElement(React.Fragment, null, React.createElement(Link, {\n      to: \"/\",\n      className: \"ui button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Delete\"));\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      title: \"Delete stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/home/rajesh/streamy/src/components/streams/StreamDelete.js"],"names":["React","Modal","history","fetchStream","deleteStream","connect","streams","Link","StreamDelete","Component","componentDidMount","console","log","props","match","params","id","renderContent","stream","title","renderActions","render","push","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,IAAR,QAAoB,OAApB;;AAEA,MAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AAEzCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWV,WAAX,CAAuB,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACtB,aAAO,8CAAP;AACD;;AACD,6EAAkE,KAAKL,KAAL,CAAWK,MAAX,CAAkBC,KAApF;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,WACE,0CACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAE,KAAF;AACE,MAAA,KAAK,EAAC,eADR;AAEE,MAAA,OAAO,EAAE,KAAKJ,aAAL,EAFX;AAGE,MAAA,OAAO,EAAE,KAAKG,aAAL,EAHX;AAIE,MAAA,SAAS,EAAE,MAAMlB,OAAO,CAACoB,IAAR,CAAa,GAAb,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD;;AAjCwC;;AAqC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEP,IAAAA,MAAM,EAAEM,KAAK,CAAClB,OAAN,CAAcmB,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACD,CAFD;;AAIA,eAAeX,OAAO,CAACkB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA0CK,YAA1C,CAAf","sourcesContent":["import React from 'react';\nimport Modal from '../Modal'\nimport history from '../../history'\nimport { fetchStream, deleteStream } from '../../actions';\nimport { connect } from 'react-redux';\nimport streams from '../../api/streams';\nimport {Link } from 'react'\n\nclass StreamDelete extends React.Component {\n\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream?'\n    }\n    return `Are you sure you want to delete the stream with title : ${this.props.stream.title} ?`;\n  }\n\n  renderActions() {\n    return (\n      <>\n        <Link to='/' className=\"ui button\">Cancel</Link>\n        <button className=\"ui button negative\">Delete</button>\n      </>\n    );\n  }\n\n  render() {\n    return (\n      < Modal\n        title=\"Delete stream\"\n        content={this.renderContent()}\n        actions={this.renderActions()}\n        onDismiss={() => history.push('/')}\n      />\n\n    );\n  }\n\n\n}\nconst mapStateToProps = (state, ownProps) => {\n  return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(mapStateToProps, { fetchStream })(StreamDelete);\n\n"]},"metadata":{},"sourceType":"module"}