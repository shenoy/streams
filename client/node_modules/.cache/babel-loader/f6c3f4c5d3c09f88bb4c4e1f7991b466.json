{"ast":null,"code":"var _jsxFileName = \"/home/rajesh/streamy/src/components/GoogleAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.signIn(this.auth.currentUser.get().get);\n      } else {\n        this.props.signOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n\n    this.renderAuthButton = () => {\n      if (this.props.isSignedIn === null) {\n        return null;\n      } else if (this.props.isSignedIn) {\n        return React.createElement(\"button\", {\n          onClick: this.onSignOutClick,\n          className: \"ui google red button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), \"Sign out\");\n      }\n\n      if (!this.props.isSignedIn) {\n        return React.createElement(\"button\", {\n          onClick: this.onSignInClick,\n          className: \"ui google red button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }), \"Sign in with google\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '387647445172-vd9ses150885rn44keifvk1afq5kster.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.renderAuthButton());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn,\n  signOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/rajesh/streamy/src/components/GoogleAuth.js"],"names":["React","connect","signIn","signOut","GoogleAuth","Component","onAuthChange","isSignedIn","props","auth","currentUser","get","onSignInClick","onSignOutClick","renderAuthButton","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;AAGA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAevCC,YAfuC,GAevBC,UAAD,IAAgB;AAC7B,UAAIA,UAAJ,EAAgB;AACd,aAAKC,KAAL,CAAWN,MAAX,CAAkB,KAAKO,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BA,GAA9C;AACD,OAFD,MAEO;AACL,aAAKH,KAAL,CAAWL,OAAX;AACD;AACF,KArBsC;;AAAA,SAuBvCS,aAvBuC,GAuBvB,MAAM;AACpB,WAAKH,IAAL,CAAUP,MAAV;AACD,KAzBsC;;AAAA,SA2BvCW,cA3BuC,GA2BtB,MAAM;AACrB,WAAKJ,IAAL,CAAUN,OAAV;AACD,KA7BsC;;AAAA,SA+BvCW,gBA/BuC,GA+BpB,MAAM;AAEvB,UAAI,KAAKN,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AAClC,eAAO,IAAP;AAED,OAHD,MAGO,IAAI,KAAKC,KAAL,CAAWD,UAAf,EAA2B;AAChC,eACE;AAAQ,UAAA,OAAO,EAAE,KAAKM,cAAtB;AAAsC,UAAA,SAAS,EAAC,sBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,aADF;AAMD;;AAAC,UAAI,CAAC,KAAKL,KAAL,CAAWD,UAAhB,EAA4B;AAC5B,eACE;AAAQ,UAAA,OAAO,EAAE,KAAKK,aAAtB;AAAqC,UAAA,SAAS,EAAC,sBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,wBADF;AAMD;AACF,KAnDsC;AAAA;;AACvCG,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACrCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACtBC,QAAAA,QAAQ,EAAE,0EADY;AAEtBC,QAAAA,KAAK,EAAE;AAFe,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACZ,aAAKd,IAAL,GAAYO,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKnB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBmB,MAArB,CAA4B,KAAKpB,YAAjC;AAED,OARD;AASD,KAVD;AAWD;;AAwCDqB,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKb,gBAAL,EAAN,CAAP;AACD;;AAvDsC;;AA2DzC,MAAMc,eAAe,GAAIC,KAAD,IAAW;AAEjC,SAAO;AAAEtB,IAAAA,UAAU,EAAEsB,KAAK,CAACpB,IAAN,CAAWF;AAAzB,GAAP;AACD,CAHD;;AAMA,eAAeN,OAAO,CAAC2B,eAAD,EAAkB;AAAE1B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\n\nclass GoogleAuth extends React.Component {\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '387647445172-vd9ses150885rn44keifvk1afq5kster.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n\n      });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      this.props.signIn(this.auth.currentUser.get().get);\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  }\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  }\n\n  renderAuthButton = () => {\n\n    if (this.props.isSignedIn === null) {\n      return null;\n\n    } else if (this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignOutClick} className=\"ui google red button\">\n          <i className=\"google icon\" />\n          Sign out\n        </button>\n      );\n    } if (!this.props.isSignedIn) {\n      return (\n        <button onClick={this.onSignInClick} className=\"ui google red button\">\n          <i className=\"google icon\" />\n          Sign in with google\n        </button>\n      );\n    }\n  }\n\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n\n  return { isSignedIn: state.auth.isSignedIn };\n};\n\n\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}