{"ast":null,"code":"var _jsxFileName = \"/home/rajesh/streamy/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"...Loading\\\"\");\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.match.params.title), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.props.match.params.description));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    streams: this.state.fetchStream[this.props.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/home/rajesh/streamy/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","stream","title","description","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAGA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AACvCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAEP,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;AACD,WACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBI,KAA9B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKN,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBK,WAA9B,CAFF,CADF;AAMD;;AAhBsC;;AAmBzC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAAEC,IAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWb,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AAAX,GAAP;AACD,CAFD;;AAIA,eAAeR,OAAO,CAACa,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions'\n\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n\n    if (!this.props.stream) {\n      return <div>...Loading\"</div>\n    }\n    return (\n      <>\n        <div>{this.props.match.params.title}</div>\n        <div>{this.props.match.params.description}</div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { streams: this.state.fetchStream[this.props.match.params.id] }\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);\n\n"]},"metadata":{},"sourceType":"module"}